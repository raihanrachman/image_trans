{"id":"shader/fragment.glsl","dependencies":[{"name":"/Users/fleavaagency/Downloads/yuri awwards webgl/teste/package.json","includedInParent":true,"mtime":1620704372133}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nvarying float vNoise;\\nvarying vec2 vUv;\\nuniform sampler2D uImage;\\nuniform float time;\\nuniform float hoverState;\\n\\nvoid main() {\\n\\t// vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\\n\\t// vec3 color1 = vec3(1., 0., 0.);\\n\\t// vec3 color2 = vec3(0., 0., 1.);\\n\\t// vec3 finalColor = mix(color1, color2, vNoise);\\n\\tvec2 newUV = vUv;\\n\\n\\tvec2 p = newUV;\\n\\tfloat x = hoverState;\\n\\tx = smoothstep(.0, 1.0, (x * 2.0 + p.x - 1.0));\\n\\tvec4 f = mix(texture2D(uImage, (p - .5) * (1. - x) + .5), texture2D(uImage, (p - .5) * x + .5), x);\\n\\n\\t// \\n\\tnewUV = vec2(newUV.x, newUV.y + 0.01 * sin(newUV.x * 10. + time));\\n\\tvec4 moonView = texture2D(uImage, newUV);\\n\\n\\t// gl_FragColor = vec4(finalColor, 1.);\\n\\t// gl_FragColor = vec4(vUv, 1., 1.);\\n\\t// gl_FragColor = vec4(vNoise);\\n\\t// gl_FragColor = moonView;\\n\\tgl_FragColor = f;\\n\\t// gl_FragColor.rgb += 0.04 * vec3(vNoise);\\n\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shader/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shader/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shader/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":932},"source":"shader/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"shader/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nvarying float vNoise;\\nvarying vec2 vUv;\\nuniform sampler2D uImage;\\nuniform float time;\\nuniform float hoverState;\\n\\nvoid main() {\\n\\t// vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\\n\\t// vec3 color1 = vec3(1., 0., 0.);\\n\\t// vec3 color2 = vec3(0., 0., 1.);\\n\\t// vec3 finalColor = mix(color1, color2, vNoise);\\n\\tvec2 newUV = vUv;\\n\\n\\tvec2 p = newUV;\\n\\tfloat x = hoverState;\\n\\tx = smoothstep(.0, 1.0, (x * 2.0 + p.x - 1.0));\\n\\tvec4 f = mix(texture2D(uImage, (p - .5) * (1. - x) + .5), texture2D(uImage, (p - .5) * x + .5), x);\\n\\n\\t// \\n\\tnewUV = vec2(newUV.x, newUV.y + 0.01 * sin(newUV.x * 10. + time));\\n\\tvec4 moonView = texture2D(uImage, newUV);\\n\\n\\t// gl_FragColor = vec4(finalColor, 1.);\\n\\t// gl_FragColor = vec4(vUv, 1., 1.);\\n\\t// gl_FragColor = vec4(vNoise);\\n\\t// gl_FragColor = moonView;\\n\\tgl_FragColor = f;\\n\\t// gl_FragColor.rgb += 0.04 * vec3(vNoise);\\n\\n}\";"},"lineCount":null}},"error":null,"hash":"899a211ff5819a332bc01810eec2f7ee","cacheData":{"env":{}}}